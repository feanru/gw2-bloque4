import{CraftIngredient}from"./items-core.min.js";import"./utils-BJEOp7Xj.js";import"./services.min.js";const t="undefined"!=typeof self?self:globalThis;function e(t){return Array.isArray(t)?t.map(t=>r(t,null)):[]}function r(t,e){const l=new CraftIngredient(t);return Object.assign(l,t),"number"==typeof t._uid&&(l._uid=t._uid,CraftIngredient.nextUid<=t._uid&&(CraftIngredient.nextUid=t._uid+1)),l._parent=e||null,l.children=Array.isArray(t.children)?t.children.map(t=>r(t,l)):[],l}function recalcAll(t,e){t&&t.forEach(t=>{t.recalc(e,null)})}function l(t){let e=0,r=0,l=0;for(const o of t)switch(e+=o.total_buy||0,r+=o.total_sell||0,o.modeForParentCrafted){case"sell":l+=o.total_sell||0;break;case"crafted":l+=o.total_crafted||0;break;default:l+=o.total_buy||0}return{totalBuy:e,totalSell:r,totalCrafted:l}}t.onmessage=r=>{const{ingredientTree:o,globalQty:a}=r.data||{},n=e(o);recalcAll(n,a);const i=l(n),s=[];!function t(e){for(const r of e){const{_uid:e,total_buy:l,total_sell:o,total_crafted:a,crafted_price:n,countTotal:i}=r;s.push({uid:e,total_buy:l,total_sell:o,total_crafted:a,crafted_price:n,countTotal:i}),Array.isArray(r.children)&&r.children.length&&t(r.children)}}(n),t.postMessage({costs:s,totals:i})};export{l as getTotals,e as rebuildTreeArray,recalcAll};
