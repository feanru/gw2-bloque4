import{showSkeleton,hideSkeleton}from"./ui-helpers.js";import{restoreCraftIngredientPrototypes}from"./items-core.js";import{mergeWorkerTotals}from"./utils/mergeWorkerTotals.js";const{fetchItemData:fetchItemData,fetchPriceData:fetchPriceData}=window.DonesCore||{};var DONES=[{id:19673,name:"Don de la Magia",mainIngredients:[{id:19675,name:"Trébol místico",type:"account_bound",count:77,components:[{id:19976,name:"Moneda mística",count:250},{id:19721,name:"Pegote de ectoplasma",count:250},{id:19925,name:"Esquirla de obsidiana",count:250},{id:20796,name:"Piedra filosofal",count:1500}]},{id:19721,name:"Pegote de ectoplasma",count:250}],manualIngredients:[{id:24295,name:"Vial de sangre poderosa",count:250},{id:24283,name:"Vesícula de veneno poderoso",count:250},{id:24300,name:"Tótem elaborado",count:250},{id:24277,name:"Montón de polvo cristalino",count:250}]},{id:19672,name:"Don del Poder",manualIngredients:[{id:24357,name:"Colmillo feroz",count:250},{id:24289,name:"Escama blindada",count:250},{id:24351,name:"Garra despiadada",count:250},{id:24358,name:"Hueso antiguo",count:250}]},{id:19626,name:"Don de la Suerte",mainIngredients:[{id:19721,name:"Pegote de ectoplasma",count:250},{id:19675,name:"Trébol místico",type:"account_bound",count:77,components:[{id:19976,name:"Moneda mística",count:250},{id:19721,name:"Pegote de ectoplasma",count:250},{id:19925,name:"Esquirla de obsidiana",count:250},{id:20796,name:"Piedra filosofal",count:1500}]},{id:19673,name:"Don de la Magia",type:"crafting_material",count:1,components:[{id:24295,name:"Vial de sangre poderosa",count:250},{id:24283,name:"Vesícula de veneno poderoso",count:250},{id:24300,name:"Tótem elaborado",count:250},{id:24277,name:"Montón de polvo cristalino",count:250}]},{id:19672,name:"Don del Poder",type:"crafting_material",count:1,components:[{id:24351,name:"Colmillo feroz",count:250},{id:24289,name:"Escama blindada",count:250},{id:24357,name:"Garra despiadada",count:250},{id:24358,name:"Hueso antiguo",count:250}]}]}];const API_ITEM="https://api.guildwars2.com/v2/items/";const API_PRICES="https://api.guildwars2.com/v2/commerce/prices/";const donesContent=document.getElementById("dones-content");const donesSkeleton=document.getElementById("dones-skeleton");const errorMsg=document.getElementById("error-message");window.showSkeleton=showSkeleton;window.hideSkeleton=hideSkeleton;const FIXED_PRICE_ITEMS={19676:1e4};const EXCLUDED_ITEM_IDS=[19675,19925,20796,20799,19665,19674,19626,19672,19673,19645,19650,19655,19639,19635,19621];let donesWorkerInstance=null;let costsWorkerInstance=null;function runDonesWorker(rootIngredients){if(!donesWorkerInstance){donesWorkerInstance=new Worker(new URL("./workers/donesWorker.min.js",import.meta.url),{type:"module"})}return new Promise((resolve,reject)=>{const handleMessage=e=>{donesWorkerInstance.removeEventListener("message",handleMessage);donesWorkerInstance.removeEventListener("error",handleError);resolve(e.data)};const handleError=err=>{donesWorkerInstance.removeEventListener("message",handleMessage);donesWorkerInstance.removeEventListener("error",handleError);reject(err)};donesWorkerInstance.addEventListener("message",handleMessage);donesWorkerInstance.addEventListener("error",handleError);donesWorkerInstance.postMessage({rootIngredients:rootIngredients})})}function runCostsWorker(ingredientTree,globalQty){if(!costsWorkerInstance){costsWorkerInstance=new Worker(new URL("./workers/costsWorker.min.js",import.meta.url),{type:"module"})}return new Promise((resolve,reject)=>{const handleMessage=e=>{costsWorkerInstance.removeEventListener("message",handleMessage);costsWorkerInstance.removeEventListener("error",handleError);resolve(e.data)};const handleError=err=>{costsWorkerInstance.removeEventListener("message",handleMessage);costsWorkerInstance.removeEventListener("error",handleError);reject(err)};costsWorkerInstance.addEventListener("message",handleMessage);costsWorkerInstance.addEventListener("error",handleError);costsWorkerInstance.postMessage({ingredientTree:ingredientTree,globalQty:globalQty})})}async function buildWorkerTree(ings){const{ingredientTree:ingredientTree}=await runDonesWorker(ings);const{costs:costs,totals:totals}=await runCostsWorker(ingredientTree,1);if(Array.isArray(costs)){mergeWorkerTotals(costs,ingredientTree)}restoreCraftIngredientPrototypes(ingredientTree,null);return{tree:ingredientTree,totals:totals}}function renderNodeHtml(node,level=0){const indent=level>0?`padding-left:${level*32}px;`:"";const priceBuy=node.buy_price?formatGoldColored(node.buy_price):"-";const priceSell=node.sell_price?formatGoldColored(node.sell_price):"-";const totalBuy=node.total_buy?formatGoldColored(node.total_buy):"-";const totalSell=node.total_sell?formatGoldColored(node.total_sell):"-";let rowHtml=`<tr>\n    <td style='${indent}'>${node.icon?`<img src='${node.icon}' style='height:28px;'>`:"-"}</td>\n    <td>${node.name}</td>\n    <td>${Math.round(node.count)}</td>\n    <td>${priceBuy}</td>\n    <td>${priceSell}</td>\n    <td>${totalBuy}</td>\n    <td>${totalSell}</td>\n  </tr>`;if(Array.isArray(node.children)){for(const child of node.children){rowHtml+=renderNodeHtml(child,level+1)}}return rowHtml}async function renderDon(don,container){const targetContainer=container||document.getElementById("dones-content");targetContainer.innerHTML="";errorMsg.style.display="none";try{let donName=don.name;let donIcon=null;if(don.id<9e4){const donInfo=await fetchItemData(don.id);donName=donInfo.name;donIcon=donInfo.icon}else{const primerIng=don.manualIngredients[0];const primerIngInfo=await fetchItemData(primerIng.id);donIcon=primerIngInfo.icon}let html="";const nombre=don.name?don.name.toLowerCase():"";const esDonSimple=nombre.includes("suerte")||nombre.includes("magia")||nombre.includes("poder");if(esDonSimple){if(don.mainIngredients&&don.mainIngredients.length>0){html+=`<table class='table-modern-dones tabla-tarjetas'>\n          <thead class='header-items'><tr><th>Ícono</th><th>Nombre</th><th>Cantidad</th><th>Precio Compra (u)</th><th>Precio Venta (u)</th><th>Total Compra</th><th>Total Venta</th></tr></thead><tbody>`;let totalBuy=0;let totalSell=0;for(const ing of don.mainIngredients){const result=await renderIngredientRowWithComponents(ing,0);html+=result.html;totalBuy+=result.totalBuy||0;totalSell+=result.totalSell||0}html+=`</tbody></table>`;if(totalBuy>0||totalSell>0){html+=`<div class='table-modern-totales' style='margin-bottom:50px;'>\n            <div class='precio-totales-dones'>\n              <div class='total-dones'><b>Total Compra estimado:</b> ${formatGoldColored(totalBuy)}</div>\n              <div class='total-dones'><b>Total Venta estimado:</b> ${formatGoldColored(totalSell)}</div>\n            </div>\n          </div>`}}targetContainer.innerHTML+=html;return}if(!esDonSimple){html+=`<h2 style='margin-top:18px;'><img src='${donIcon}' style='height:32px;vertical-align:middle;'> ${donName}</h2>`}if(don.mainIngredients&&don.mainIngredients.length>0){html+=`<table class='table-modern-dones tabla-tarjetas'>\n        <thead class='header-items'><tr><th>Ícono</th><th>Nombre</th><th>Cantidad</th><th>Precio Compra (u)</th><th>Precio Venta (u)</th><th>Total Compra</th><th>Total Venta</th></tr></thead><tbody>`;let totalBuy=0;let totalSell=0;for(const ing of don.mainIngredients){const result=await renderIngredientRowWithComponents(ing,0);html+=result.html;totalBuy+=result.totalBuy||0;totalSell+=result.totalSell||0}html+=`</tbody></table>`;if(totalBuy>0||totalSell>0){html+=`<div class='table-modern-totales' style='margin-bottom:50px;'>\n          <div class='precio-totales-dones'>\n            <div class='total-dones'><b>Total Compra estimado:</b> ${formatGoldColored(totalBuy)}</div>\n            <div class='total-dones'><b>Total Venta estimado:</b> ${formatGoldColored(totalSell)}</div>\n          </div>\n        </div>`}}if(esDonSimple)return;targetContainer.innerHTML+=html}catch(e){errorMsg.innerText=e.message;errorMsg.style.display="block"}}async function extractWeaponGifts(){const{LEGENDARY_ITEMS:LEGENDARY_ITEMS}=window.LegendaryData||{};const gifts=[];const seen=new Set;for(const item of Object.values(LEGENDARY_ITEMS)){if(!item.components)continue;const gift=item.components.find(c=>{if(!c.name)return false;const lower=c.name.toLowerCase();return lower.startsWith("don de")&&!lower.includes("la suerte")&&!lower.includes("del dominio")});if(gift&&!seen.has(gift.id)){seen.add(gift.id);gifts.push({id:gift.id,name:gift.name,mainIngredients:gift.components||[],manualIngredients:[]})}}gifts.sort((a,b)=>a.name.localeCompare(b.name,"es"));return gifts}async function renderLegendaryWeaponGifts(){const container=document.getElementById("dones-1ra-gen-content");const skeleton=document.getElementById("dones-1ra-gen-skeleton");if(!container||!skeleton)return;showSkeleton(skeleton);container.innerHTML="";try{const gifts=await extractWeaponGifts();const btnsDiv=document.createElement("div");btnsDiv.className="don1gen-nav-btns";btnsDiv.style="margin-bottom: 10%; display: flex; flex-wrap: wrap; gap: 10px;";const resultDiv=document.createElement("div");resultDiv.id="don1gen-result";gifts.forEach(don=>{const btn=document.createElement("button");btn.className="dones-btn";btn.textContent=don.name;btn.addEventListener("click",async()=>{btnsDiv.querySelectorAll("button").forEach(b=>b.classList.remove("active"));btn.classList.add("active");resultDiv.innerHTML="";showSkeleton(skeleton);await renderDon(don,resultDiv);hideSkeleton(skeleton)});btnsDiv.appendChild(btn)});container.appendChild(btnsDiv);container.appendChild(resultDiv)}catch(error){console.error("Error al renderizar dones de 1ra Gen:",error);container.innerHTML='<div class="error-message">Error al cargar los dones.</div>'}finally{hideSkeleton(skeleton)}}async function renderSpecialDons(){const container=document.getElementById("dones-content");const skeleton=donesSkeleton;showSkeleton(skeleton);container.innerHTML="";const specialDons=DONES.filter(d=>d.name&&d.name.toLowerCase().includes("suerte"));for(const don of specialDons){const donContainer=document.createElement("div");container.appendChild(donContainer);await renderDon(don,donContainer)}hideSkeleton(skeleton)}async function getDraconicTribute(){const{LEGENDARY_ITEMS_3GEN:LEGENDARY_ITEMS_3GEN}=window.LegendaryData||{};for(const weapon of Object.values(LEGENDARY_ITEMS_3GEN)){const tribute=weapon.components?.find(c=>{const nm=c.name?.toLowerCase()||"";return nm.includes("tributo dracónico")});if(tribute)return tribute}throw new Error("No se encontró el Tributo Dracónico en legendaryItems3gen")}async function renderDraconicTribute(){const container=document.getElementById("tributo-draconico-content");const skeleton=document.getElementById("tributo-draconico-skeleton");if(!container||!skeleton)return;showSkeleton(skeleton);container.innerHTML="";try{const tributoTree=await getDraconicTribute();let html=`<h2>${tributoTree.name}</h2>`;html+=`<table class='table-modern-dones tabla-tarjetas'>\n      <thead class='header-items'>\n        <tr>\n          <th>Ícono</th>\n          <th>Nombre</th>\n          <th>Cantidad</th>\n          <th>Precio Compra (u)</th>\n          <th>Precio Venta (u)</th>\n          <th>Total Compra</th>\n          <th>Total Venta</th>\n        </tr>\n      </thead>\n      <tbody>`;let totalBuy=0;let totalSell=0;for(const component of tributoTree.components){const result=await renderIngredientRowWithComponents(component,0);html+=result.html;totalBuy+=result.totalBuy||0;totalSell+=result.totalSell||0}html+=`</tbody></table>`;html+=`<div class='table-modern-totales' style='margin-bottom:50px;'>\n      <div class='precio-totales-dones'>\n        <div class='total-dones'><b>Total Compra estimado:</b> ${formatGoldColored(totalBuy)}</div>\n        <div class='total-dones'><b>Total Venta estimado:</b> ${formatGoldColored(totalSell)}</div>\n      </div>\n    </div>`;container.innerHTML=html}catch(e){console.error("Error al renderizar Tributo Dracónico:",e);container.innerHTML='<div class="error-message">Error al cargar el Tributo Dracónico.</div>'}finally{hideSkeleton(skeleton)}}const _loadedTabs={special:false,tributo:false,draco:false,gen1:false};async function loadSpecialDons(){if(_loadedTabs.special)return;_loadedTabs.special=true;await renderSpecialDons()}async function loadTributo(){if(_loadedTabs.tributo)return;_loadedTabs.tributo=true;await renderTributo()}async function loadDraconicTribute(){if(_loadedTabs.draco)return;_loadedTabs.draco=true;await renderDraconicTribute()}async function loadDones1Gen(){if(_loadedTabs.gen1)return;_loadedTabs.gen1=true;await renderLegendaryWeaponGifts()}window.DonesPages={loadSpecialDons:loadSpecialDons,loadTributo:loadTributo,loadDraconicTribute:loadDraconicTribute,loadDones1Gen:loadDones1Gen};async function renderTributoDraconico(){const container=document.getElementById("tributo-draconico-content");const tributoDraconicoSkeleton=document.getElementById("tributo-draconico-skeleton");if(!container||!tributoDraconicoSkeleton)return;showSkeleton(tributoDraconicoSkeleton);container.innerHTML="";try{if(TRIBUTO_DRACONICO.mainIngredients&&TRIBUTO_DRACONICO.mainIngredients.length>0){let html=`<h3>Ingredientes principales</h3>`;html+=`<table class='table-modern-dones tabla-tarjetas'><thead class='header-items'><tr><th>Ícono</th><th>Nombre</th><th>Cantidad</th><th>Precio Compra (u)</th><th>Precio Venta (u)</th><th>Total Compra</th><th>Total Venta</th></tr></thead><tbody>`;let totalBuy=0;let totalSell=0;let trebolBuy=0;let trebolSell=0;let piedrasBuy=0;let piedrasSell=0;for(const ing of TRIBUTO_DRACONICO.mainIngredients){const result=await renderIngredientRowWithComponents(ing,0);html+=result.html;if(ing.id===19675){trebolBuy=result.totalBuy||0;trebolSell=result.totalSell||0}else if(ing.id===92687){piedrasBuy=result.totalBuy||0;piedrasSell=result.totalSell||0}else{}}totalBuy=trebolBuy+piedrasBuy;totalSell=trebolSell+piedrasSell;html+=`</tbody></table>`;html+=`<div class="table-modern-totales" style="margin-bottom:50px;">\n        <div class="precio-totales-dones">\n          <div class="total-dones"><b>Total Compra estimado:</b> ${formatGoldColored(totalBuy)}</div>\n          <div class="total-dones"><b>Total Venta estimado:</b> ${formatGoldColored(totalSell)}</div>\n        </div>\n      </div>`;document.getElementById("tributo-draconico-content").insertAdjacentHTML("beforeend",html)}for(const don of TRIBUTO_DRACONICO.dons){const donDiv=document.createElement("div");donDiv.className="don-section";const donTitle=document.createElement("h3");donTitle.textContent=don.name;donDiv.appendChild(donTitle);for(const subdon of don.subdons){const subdonDiv=document.createElement("div");subdonDiv.className="subdon-section";const subdonTitle=document.createElement("h4");subdonTitle.textContent=subdon.name;subdonDiv.appendChild(subdonTitle);const ingredientes=await Promise.all(subdon.ingredients.map(async ing=>{const[info,price]=await Promise.all([fetchItemData(ing.id),fetchPriceData(ing.id)]);return{id:ing.id,name:info.name,icon:info.icon,count:ing.count,priceBuy:price?price.buys.unit_price:null,priceSell:price?price.sells.unit_price:null}}));let totalBuy=0;let totalSell=0;let rowsHtml="";ingredientes.forEach((ing,idx)=>{const totalBuyIng=ing.priceBuy?ing.priceBuy*ing.count:null;const totalSellIng=ing.priceSell?ing.priceSell*ing.count:null;if(totalBuyIng)totalBuy+=totalBuyIng;if(totalSellIng)totalSell+=totalSellIng;rowsHtml+=`\n            <tr data-id='${ing.id}' class='${idx%2===0?"row-bg-a":"row-bg-b"}'>\n              <td><img src='${ing.icon}' style='height:28px;'></td>\n              <td>${ing.name}</td>\n              <td>${Math.round(ing.count)}</td>\n              <td>${ing.priceBuy?formatGoldColored(ing.priceBuy):"-"}</td>\n              <td>${ing.priceSell?formatGoldColored(ing.priceSell):"-"}</td>\n              <td>${totalBuyIng?formatGoldColored(totalBuyIng):"-"}</td>\n              <td>${totalSellIng?formatGoldColored(totalSellIng):"-"}</td>\n            </tr>`});const tableHtml=`<table class='table-modern-dones tabla-tarjetas'>\n          <thead class='header-items'><tr><th>Ícono</th><th>Nombre</th><th>Cantidad</th><th>Precio Compra (u)</th><th>Precio Venta (u)</th><th>Total Compra</th><th>Total Venta</th></tr></thead>\n          <tbody>${rowsHtml}</tbody>\n        </table>`;subdonDiv.insertAdjacentHTML("beforeend",tableHtml);const totalsHtml=`<div class='table-modern-totales' style='margin-bottom:50px;'>\n          <div class='precio-totales-dones'>\n            <div class='total-dones'><b>Total Compra estimado:</b> ${formatGoldColored(totalBuy)}</div>\n            <div class='total-dones'><b>Total Venta estimado:</b> ${formatGoldColored(totalSell)}</div>\n          </div>\n        </div>`;subdonDiv.insertAdjacentHTML("beforeend",totalsHtml);donDiv.appendChild(subdonDiv)}container.appendChild(donDiv)}}catch(e){container.innerHTML='<div class="error-message">Error al cargar el Tributo Dracónico.</div>'}finally{hideSkeleton(tributoDraconicoSkeleton)}}const TRIBUTO={name:"Tributo Místico",mainIngredients:[{id:19675,name:"Trébol místico",type:"account_bound",count:77,components:[{id:19976,name:"Moneda mística",count:250},{id:19721,name:"Pegote de ectoplasma",count:250},{id:19925,name:"Esquirla de obsidiana",count:250},{id:20796,name:"Piedra filosofal",count:1500}]},{id:19976,name:"Moneda mística",count:250}],dons:[{name:"Don de magia condensada",subdons:[{name:"Don de sangre",ingredients:[{id:24295,name:"Vial de sangre poderosa",count:100},{id:24294,name:"Vial de sangre potente",count:250},{id:24293,name:"Vial de sangre espesa",count:50},{id:24292,name:"Vial de sangre",count:50}]},{name:"Don de veneno",ingredients:[{id:24283,name:"Vesícula de veneno poderoso",count:100},{id:24282,name:"Vesícula de veneno potente",count:250},{id:24281,name:"Vesícula de veneno llena",count:50},{id:24280,name:"Vesícula de veneno",count:50}]},{name:"Don de tótems",ingredients:[{id:24300,name:"Tótem elaborado",count:100},{id:24299,name:"Tótem intrincado",count:250},{id:24298,name:"Tótem grabado",count:50},{id:24297,name:"Tótem",count:50}]},{name:"Don de polvo",ingredients:[{id:24277,name:"Montón de polvo cristalino",count:100},{id:24276,name:"Montón de polvo incandescente",count:250},{id:24275,name:"Montón de polvo luminoso",count:50},{id:24274,name:"Montón de polvo radiante",count:50}]}]},{name:"Don de poder condensado",subdons:[{name:"Don de garras",ingredients:[{id:24351,name:"Garra despiadada",count:100},{id:24350,name:"Garra grande",count:250},{id:24349,name:"Garra afilada",count:50},{id:24348,name:"Garra",count:50}]},{name:"Don de escamas",ingredients:[{id:24289,name:"Escama blindada",count:100},{id:24288,name:"Escama grande",count:250},{id:24287,name:"Escama suave",count:50},{id:24286,name:"Escama",count:50}]},{name:"Don de huesos",ingredients:[{id:24358,name:"Hueso antiguo",count:100},{id:24341,name:"Hueso grande",count:250},{id:24345,name:"Hueso pesado",count:50},{id:24344,name:"Hueso",count:50}]},{name:"Don de colmillos",ingredients:[{id:24357,name:"Colmillo feroz",count:100},{id:24356,name:"Colmillo grande",count:250},{id:24355,name:"Colmillo afilado",count:50},{id:24354,name:"Colmillo",count:50}]}]}]};const TRIBUTO_DRACONICO={name:"Tributo dracónico",mainIngredients:[{id:19675,name:"Trébol místico",type:"account_bound",count:38,components:[{id:19976,name:"Moneda mística",count:38},{id:19721,name:"Pegote de ectoplasma",count:38},{id:19925,name:"Esquirla de obsidiana",count:38},{id:20796,name:"Piedra filosofal",count:228}]},{id:92687,name:"Piedra imán dracónica amalgamada",count:5}],dons:[{name:"Don de magia condensada",subdons:[{name:"Don de sangre",ingredients:[{id:24295,name:"Vial de sangre poderosa",count:100},{id:24294,name:"Vial de sangre potente",count:250},{id:24293,name:"Vial de sangre espesa",count:50},{id:24292,name:"Vial de sangre",count:50}]},{name:"Don de veneno",ingredients:[{id:24283,name:"Vesícula de veneno poderoso",count:100},{id:24282,name:"Vesícula de veneno potente",count:250},{id:24281,name:"Vesícula de veneno llena",count:50},{id:24280,name:"Vesícula de veneno",count:50}]},{name:"Don de tótems",ingredients:[{id:24300,name:"Tótem elaborado",count:100},{id:24299,name:"Tótem intrincado",count:250},{id:24298,name:"Tótem grabado",count:50},{id:24297,name:"Tótem",count:50}]},{name:"Don de polvo",ingredients:[{id:24277,name:"Montón de polvo cristalino",count:100},{id:24276,name:"Montón de polvo incandescente",count:250},{id:24275,name:"Montón de polvo luminoso",count:50},{id:24274,name:"Montón de polvo radiante",count:50}]}]},{name:"Don de poder condensado",subdons:[{name:"Don de garras",ingredients:[{id:24351,name:"Garra despiadada",count:50},{id:24350,name:"Garra grande",count:250},{id:24349,name:"Garra afilada",count:50},{id:24348,name:"Garra",count:50}]},{name:"Don de escamas",ingredients:[{id:24289,name:"Escama blindada",count:50},{id:24288,name:"Escama grande",count:250},{id:24287,name:"Escama suave",count:50},{id:24286,name:"Escama",count:50}]},{name:"Don de huesos",ingredients:[{id:24358,name:"Hueso antiguo",count:50},{id:24341,name:"Hueso grande",count:250},{id:24345,name:"Hueso pesado",count:50},{id:24344,name:"Hueso",count:50}]},{name:"Don de colmillos",ingredients:[{id:24357,name:"Colmillo feroz",count:50},{id:24356,name:"Colmillo grande",count:250},{id:24355,name:"Colmillo afilado",count:50},{id:24354,name:"Colmillo",count:50}]}]}]};async function renderIngredientRowWithComponents(ing,level=0){const{tree:tree}=await buildWorkerTree([ing]);const node=tree[0];const html=renderNodeHtml(node,level);return{html:html,totalBuy:node.total_buy||0,totalSell:node.total_sell||0}}function buildTributoTree(){const root={id:"TRIBUTO_MISTICO_ROOT",name:TRIBUTO.name,count:1,components:[]};TRIBUTO.mainIngredients.forEach(ing=>{root.components.push({...ing})});TRIBUTO.dons.forEach(don=>{const donCount=don.name.toLowerCase().includes("magia condensada")||don.name.toLowerCase().includes("poder condensado")?2:1;const donNode={id:don.name.replace(/\s+/g,"_").toUpperCase(),name:don.name,count:donCount,components:[]};don.subdons.forEach(subdon=>{const subdonNode={id:subdon.name.replace(/\s+/g,"_").toUpperCase(),name:subdon.name,count:1,components:[]};subdon.ingredients.forEach(ingredient=>{subdonNode.components.push({...ingredient})});donNode.components.push(subdonNode)});root.components.push(donNode)});return root}async function renderTributo(){const container=document.getElementById("tributo-content");const skeleton=document.getElementById("tributo-skeleton");if(!container||!skeleton)return;showSkeleton(skeleton);container.innerHTML="";try{const tributoTree=buildTributoTree();let html=`<h2>${tributoTree.name}</h2>`;html+=`<table class='table-modern-dones tabla-tarjetas'>\n      <thead class='header-items'>\n        <tr>\n          <th>Ícono</th>\n          <th>Nombre</th>\n          <th>Cantidad</th>\n          <th>Precio Compra (u)</th>\n          <th>Precio Venta (u)</th>\n          <th>Total Compra</th>\n          <th>Total Venta</th>\n        </tr>\n      </thead>\n      <tbody>`;let totalBuy=0;let totalSell=0;for(const component of tributoTree.components){const result=await renderIngredientRowWithComponents(component,0);html+=result.html;totalBuy+=result.totalBuy||0;totalSell+=result.totalSell||0}html+=`</tbody></table>`;html+=`<div class='table-modern-totales' style='margin-bottom:18px;'>\n      <div class='precio-totales-dones'>\n        <div class='total-dones'><b>Total Compra estimado:</b> ${formatGoldColored(totalBuy)}</div>\n        <div class='total-dones'><b>Total Venta estimado:</b> ${formatGoldColored(totalSell)}</div>\n      </div>\n    </div>`;container.innerHTML=html}catch(error){console.error("Error al renderizar Tributo Místico:",error);container.innerHTML='<div class="error-message">Error al cargar el Tributo Místico.</div>'}finally{hideSkeleton(skeleton)}}