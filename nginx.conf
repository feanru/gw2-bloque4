http {
    types {
        include mime.types;
        application/javascript js mjs;
    }

    # Log format for tracking legacy paths and 404 responses
    log_format legacy '$remote_addr - $remote_user [$time_local] "$request" $status "$http_referer" "$http_user_agent"';

    # Flag 404 responses for dedicated logging
    map $status $log_404 {
        default 0;
        404 1;
    }

    # Flag accesses to legacy routes such as /dist/
    map $request_uri $log_legacy {
        default 0;
        ~^/dist/ 1;
    }

    server {
        listen 80;
        server_name example.com;
        root /var/www/gw2/current;

        # The CDN is expected to honor the Cache-Control headers from this origin
        # configuration. Any CDN-side caching rules that override these headers
        # should remain disabled so that the policies below take effect.

        # Política de íconos: los íconos se descargan desde la CDN de ArenaNet
        # o pueden servirse desde este servidor ajustando las URLs.

        # Serve web workers without SPA fallback
        location ^~ /dist/js/workers/ {
            try_files $uri =404;
            default_type application/javascript;
        }

        # Return 404 for missing files under /dist/js
        location ^~ /dist/js/ {
            # BEGIN legacy hashed js
            rewrite ^/dist/js/(.+)\.[0-9a-fA-F]+\.min\.js$ /static/current/js/$1.min.js permanent;
            # END legacy hashed js
            try_files $uri =404;
            default_type application/javascript;
            error_page 404 = @js404;
        }

        location @js404 {
            add_header Content-Type application/javascript;
            return 404 "";
        }

        # Serve service worker directly without SPA fallback
        location = /service-worker.min.js {
            try_files $uri =404;
            default_type application/javascript;
        }

        # Do not cache files under /static/current/
        location ^~ /static/current/ {
            add_header Cache-Control "no-cache, must-revalidate";
            expires -1;
        }

        # Strong cache for versioned static files
        location ~ ^/static/[^/]+/ {
            add_header Cache-Control "public, max-age=31536000, immutable";
            expires 1y;
        }

        # Cache static assets for 30 days
        location ~* \.(js|css|png|mp4)$ {
            expires 30d;
            add_header Cache-Control "public, max-age=2592000, stale-while-revalidate=2592000";
        }

        # Route recipe tree API through Node service
        location /recipe-tree/ {
            proxy_pass http://localhost:<puerto>/backend/api/recipeTree.js;
        }

        # SPA fallback for other routes
        location / {
            add_header Cache-Control "no-cache";
            try_files $uri $uri/ /index.html;
        }

        # Dedicated access logs for legacy routes and 404 errors
        access_log /var/log/nginx/legacy.log legacy if=$log_legacy;
        access_log /var/log/nginx/404.log legacy if=$log_404;
    }
}
